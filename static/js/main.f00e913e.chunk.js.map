{"version":3,"sources":["components/Button/index.js","components/Modal/index.js","redux/types/index.js","redux/actions/index.js","components/Card/index.js","components/Itemlist/index.js","components/Itempage/index.js","components/Headerlogo/index.js","components/Headernav/index.js","components/Headerburger/index.js","components/Header/index.js","components/Favorites/index.js","components/Cart/index.js","components/Form/index.js","components/App/App.js","reportWebVitals.js","redux/reducer/index.js","index.js"],"names":["Button","bgc","type","text","btnClName","onClick","style","backgroundColor","className","Modal","header","closeButton","modalBg","headerBg","actions","closeModalHandler","e","target","currentTarget","DATA_REQUEST_STARTED","DATA_REQUEST_SUCCESS","DATA_REQUEST_FAILURE","ADD_FAVORITE_STARTED","ADD_FAVORITE_SUCCESS","ADD_FAVORITE_FAILURE","REMOVE_FAVORITE_STARTED","REMOVE_FAVORITE_SUCCESS","REMOVE_FAVORITE_FAILURE","ADD_CART_STARTED","ADD_CART_SUCCESS","ADD_CART_FAILURE","REMOVE_CART_STARTED","REMOVE_CART_SUCCESS","REMOVE_CART_FAILURE","ADD_CONFIRM_MODAL","REMOVE_CONFIRM_MODAL","ADD_REGECT_MODAL","REMOVE_REGECT_MODAL","addDataFavorite","favorite","dispatch","payload","addFavoriteSuccess","removeDataFavorite","removeFavoriteSuccess","addDataCart","cart","addCartSuccess","removeDataCart","removeCartSuccess","removeConfirmModal","removeRegectModal","dataRequest","getState","axios","get","then","res","data","meals","catch","err","error","message","Card","addButCart","delButCart","addEmptyrtStar","addFullStar","skipBut","strMealThumb","strMeal","strInstructions","idMeal","useState","firstStar","setFstar","secondStar","setSstar","secondModal","setSmodal","firstModal","setFmodal","addButtonCart","delButtonCart","skipButton","useDispatch","useSelector","store","ОкFirstModalHandler","id","forEach","el","i","splice","newCart","localStorage","setItem","JSON","stringify","cartHandlerRemove","ModalHandler","OkSecondModalHandler","parse","getItem","some","cartHandlerAdd","src","alt","width","height","version","xmlns","viewBox","d","fill","stroke","newFavorit","starHandlerAdd","Itemlist","map","bgcolor","Itempage","useEffect","Headerlogo","Nav","active","setActive","openBurger","setopenBurger","lineActive","setLineActive","burgerHandler","exact","to","activeClassName","Headerburger","burger","document","querySelector","topMenu","bl","addEventListener","Header","menuActive","setmenuActive","Headernav","Favorites","length","Cart","full","Form","value1","setValue1","value2","setValue2","onSubmit","preventDefault","num","obj","Math","floor","random","favoriteHandler","value","placeholder","onChange","event","required","App","thirdModal","closeModal","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStore","confirmModal","regectModal","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","action","loading","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f00e913e.chunk.js","sourcesContent":["const Button = ({\n  bgc = 'black',\n  type = 'button',\n  text = 'Button',\n  btnClName = 'button',\n  onClick = () => {},\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={() => {\n        onClick();\n      }}\n      style={{\n        backgroundColor: bgc,\n      }}\n      className={btnClName}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nfunction Modal({\n  header = 'No header',\n  closeButton = false,\n  modalBg = 'black',\n  headerBg = 'black',\n  actions = 'No actions',\n  closeModalHandler = () => {},\n}) {\n  return (\n    <div\n      className='modal-container'\n      onClick={(e) => {\n        e.target === e.currentTarget && closeModalHandler();\n      }}\n    >\n      <div\n        className='modal'\n        style={{\n          backgroundColor: modalBg,\n        }}\n      >\n        <div\n          className='modal__header'\n          style={{\n            backgroundColor: headerBg,\n          }}\n        >\n          <h4 className='modal__title'>{header}</h4>\n          {closeButton && (\n            <button\n              className='modal__closeButton'\n              onClick={() => {\n                closeModalHandler();\n              }}\n            >\n              X\n            </button>\n          )}\n        </div>\n        {actions}\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","export const DATA_REQUEST_STARTED = 'LOGIN_REQUEST_STARTED';\nexport const DATA_REQUEST_SUCCESS = 'DATA_REQUEST_SUCCESS';\nexport const DATA_REQUEST_FAILURE = 'DATA_REQUEST_FAILURE';\n\nexport const ADD_FAVORITE_STARTED = 'ADD_FAVORITE_STARTED';\nexport const ADD_FAVORITE_SUCCESS = 'ADD_FAVORITE_SUCCESS';\nexport const ADD_FAVORITE_FAILURE = 'ADD_FAVORITE_FAILURE';\n\nexport const REMOVE_FAVORITE_STARTED = 'REMOVE_FAVORITE_STARTED';\nexport const REMOVE_FAVORITE_SUCCESS = 'REMOVE_FAVORITE_SUCCESS';\nexport const REMOVE_FAVORITE_FAILURE = 'REMOVE_FAVORITE_FAILURE';\n\nexport const ADD_CART_STARTED = 'ADD_CART_STARTED';\nexport const ADD_CART_SUCCESS = 'ADD_CART_SUCCESS';\nexport const ADD_CART_FAILURE = 'ADD_CART_FAILURE';\n\nexport const REMOVE_CART_STARTED = 'REMOVE_CART_STARTED';\nexport const REMOVE_CART_SUCCESS = 'REMOVE_CART_SUCCESS';\nexport const REMOVE_CART_FAILURE = 'REMOVE_CART_FAILURE';\n\nexport const ADD_CONFIRM_MODAL = 'ADD_CONFIRM_MODAL';\nexport const REMOVE_CONFIRM_MODAL = 'REMOVE_CONFIRM_MODAL';\n\nexport const ADD_REGECT_MODAL = 'ADD_REGECT_MODAL';\nexport const REMOVE_REGECT_MODAL = 'REMOVE_REGECT_MODAL';\n","import {\n  DATA_REQUEST_STARTED,\n  DATA_REQUEST_SUCCESS,\n  DATA_REQUEST_FAILURE,\n  ADD_FAVORITE_STARTED,\n  ADD_FAVORITE_SUCCESS,\n  ADD_FAVORITE_FAILURE,\n  REMOVE_FAVORITE_STARTED,\n  REMOVE_FAVORITE_SUCCESS,\n  REMOVE_FAVORITE_FAILURE,\n  ADD_CART_STARTED,\n  ADD_CART_SUCCESS,\n  ADD_CART_FAILURE,\n  REMOVE_CART_STARTED,\n  REMOVE_CART_SUCCESS,\n  REMOVE_CART_FAILURE,\n  ADD_CONFIRM_MODAL,\n  REMOVE_CONFIRM_MODAL,\n  ADD_REGECT_MODAL,\n  REMOVE_REGECT_MODAL,\n} from '../types';\nimport axios from 'axios';\n\nexport const dataRequestStarted = () => ({\n  type: DATA_REQUEST_STARTED,\n});\n\nexport const dataRequestSuccess = (data) => ({\n  type: DATA_REQUEST_SUCCESS,\n  payload: data,\n});\n\nexport const dataRequestFailure = (error) => ({\n  type: DATA_REQUEST_FAILURE,\n  payload: error,\n});\n\n// ============\n//добавление в избранное\nexport const addFavoriteStarted = () => ({\n  type: ADD_FAVORITE_STARTED,\n});\n\nexport const addFavoriteSuccess = (favorite) => ({\n  type: ADD_FAVORITE_SUCCESS,\n  payload: favorite,\n});\n\nexport const addFavoriteFailure = (error) => ({\n  type: ADD_FAVORITE_FAILURE,\n  payload: error,\n});\n\nexport const addDataFavorite = (favorite) => {\n  return (dispatch) => {\n    dispatch(addFavoriteStarted());\n    dispatch(addFavoriteSuccess(favorite));\n  };\n};\n\n// ============\n\n// удаление из избранного\n\nexport const removeFavoriteStarted = () => ({\n  type: REMOVE_FAVORITE_STARTED,\n});\n\nexport const removeFavoriteSuccess = (favorite) => ({\n  type: REMOVE_FAVORITE_SUCCESS,\n  payload: favorite,\n});\n\nexport const removeFavoriteFailure = (error) => ({\n  type: REMOVE_FAVORITE_FAILURE,\n  payload: error,\n});\n\nexport const removeDataFavorite = (favorite) => {\n  return (dispatch) => {\n    dispatch(removeFavoriteStarted());\n    dispatch(removeFavoriteSuccess(favorite));\n  };\n};\n\n// ============\n\n//добавление в корзину\nexport const addCartStarted = () => ({\n  type: ADD_CART_STARTED,\n});\n\nexport const addCartSuccess = (cart) => ({\n  type: ADD_CART_SUCCESS,\n  payload: cart,\n});\n\nexport const addCartFailure = (error) => ({\n  type: ADD_CART_FAILURE,\n  payload: error,\n});\n\nexport const addDataCart = (cart) => {\n  return (dispatch) => {\n    dispatch(addCartStarted());\n    dispatch(addCartSuccess(cart));\n  };\n};\n\n// ============\n\n//удаление из корзины\n\nexport const removeCartStarted = () => ({\n  type: REMOVE_CART_STARTED,\n});\n\nexport const removeCartSuccess = (cart) => ({\n  type: REMOVE_CART_SUCCESS,\n  payload: cart,\n});\n\nexport const removeCartFailure = (error) => ({\n  type: REMOVE_CART_FAILURE,\n  payload: error,\n});\n\nexport const removeDataCart = (cart) => {\n  return (dispatch) => {\n    dispatch(removeCartStarted());\n    dispatch(removeCartSuccess(cart));\n  };\n};\n\n//======================\n\n//добавление и модалки confirm\nexport const addConfirmModal = () => ({\n  type: ADD_CONFIRM_MODAL,\n  payload: true,\n});\n\nexport const removeConfirmModal = () => ({\n  type: REMOVE_CONFIRM_MODAL,\n  payload: false,\n});\n\n//======================\n\n//добавление и модалки regect\nexport const addRegectModal = () => ({\n  type: ADD_REGECT_MODAL,\n  payload: true,\n});\n\nexport const removeRegectModal = () => ({\n  type: REMOVE_REGECT_MODAL,\n  payload: false,\n});\n\n//======================\n\nexport const dataRequest = () => {\n  return (dispatch, getState) => {\n    dispatch(dataRequestStarted());\n\n    axios\n      .get('https://www.themealdb.com/api/json/v1/1/random.php', [])\n      .then((res) => {\n        dispatch(dataRequestSuccess(res.data.meals));\n      })\n      .catch((err) => {\n        dispatch(dataRequestFailure(err.message));\n      });\n  };\n};\n","import '../Card/style.scss';\nimport Button from '../Button';\nimport React from 'react';\nimport Modal from '../Modal';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addDataFavorite } from '../../redux/actions';\nimport { removeDataFavorite } from '../../redux/actions';\nimport { addDataCart } from '../../redux/actions';\nimport { removeDataCart } from '../../redux/actions';\nimport { addConfirmModal } from '../../redux/actions';\nimport { removeConfirmModal } from '../../redux/actions';\nimport { addRegectModal } from '../../redux/actions';\nimport { removeRegectModal } from '../../redux/actions';\nimport { dataRequest } from '../../redux/actions';\n\nfunction Card({\n  data = [],\n  addButCart = '',\n  delButCart = '',\n  addEmptyrtStar = '',\n  addFullStar = '',\n  skipBut = '',\n}) {\n  const {\n    strMealThumb = 'https://res.cloudinary.com/dllgerabj/image/upload/v1627462844/goodfood/Placeholder_mkqkte.png',\n    strMeal,\n    strInstructions,\n    idMeal,\n  } = data;\n\n  const [firstStar, setFstar] = useState(addEmptyrtStar);\n  const [secondStar, setSstar] = useState(addFullStar);\n  const [secondModal, setSmodal] = useState(false);\n  const [firstModal, setFmodal] = useState(false);\n  const [addButtonCart] = useState(addButCart);\n  const [delButtonCart] = useState(delButCart);\n  const [skipButton] = useState(skipBut);\n  const dispatch = useDispatch();\n\n  //функции для работы с корзиной\n\n  //добавление в корзину\n\n  const cart = useSelector((store) => {\n    return store.cart;\n  });\n\n  const cartHandlerAdd = (id, data) => {\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    if (!cart.some((el) => el.idMeal === id)) {\n      const newCart = [...cart, data];\n      localStorage.setItem('cart', JSON.stringify(newCart));\n      dispatch(addDataCart(newCart));\n    }\n  };\n\n  //удаление из корзины\n  const cartHandlerRemove = (id, data) => {\n    cart.forEach(function (el, i) {\n      if (el.idMeal === id) {\n        cart.splice(i, 1);\n        const newCart = [...cart];\n        localStorage.setItem('cart', JSON.stringify(newCart));\n        dispatch(removeDataCart(newCart));\n      }\n    });\n  };\n\n  //нажатие кнопки ок в красной модалке\n  const ОкFirstModalHandler = (id, data) => {\n    cartHandlerRemove(id, data);\n    setFmodal(!firstModal);\n    dispatch(removeRegectModal());\n  };\n\n  //функция закрытия модалок\n\n  const ModalHandler = () => {\n    setSmodal(false);\n    setFmodal(false);\n    dispatch(removeConfirmModal());\n    dispatch(removeRegectModal());\n  };\n\n  //функции для работы с избранным\n\n  //добавление в  избранное\n\n  const favorite = useSelector((store) => {\n    return store.favorite;\n  });\n\n  const starHandlerAdd = (id, data) => {\n    let favorite = JSON.parse(localStorage.getItem('favorite') || '[]');\n    if (!favorite.some((el) => el.idMeal === id)) {\n      const newFavorit = [...favorite, data];\n      localStorage.setItem('favorite', JSON.stringify(newFavorit));\n      setFstar(secondStar);\n      setSstar(!secondStar);\n      dispatch(addDataFavorite(newFavorit));\n    }\n  };\n\n  //удаление из избранного\n\n  const starHandlerRemove = (id, data) => {\n    favorite.forEach(function (el, i) {\n      if (el.idMeal === id) {\n        favorite.splice(i, 1);\n        const newFavorit = [...favorite];\n        localStorage.setItem('favorite', JSON.stringify(newFavorit));\n        dispatch(removeDataFavorite(newFavorit));\n      }\n      setFstar(secondStar);\n      setSstar(!secondStar);\n    });\n  };\n\n  const OkSecondModalHandler = (id, data) => {\n    cartHandlerAdd(id, data);\n    setSmodal(!secondModal);\n    dispatch(removeConfirmModal());\n  };\n\n  return (\n    //карточка товара\n    <div className='card__container'>\n      <div className='card__container__img'>\n        <img\n          src={strMealThumb}\n          alt='just text'\n          width='338'\n          height='254'\n          className='card__img '\n        />\n      </div>\n      <div className='card__body'>\n        <h1 className='card__title'>Dish name </h1>\n        <p className='card__title__text'> {strMeal}</p>\n        <h2 className='card__title'> Сooking instruction </h2>\n\n        <details className='card__text'>\n          <summary>Click for the instructions</summary>\n          {strInstructions}\n        </details>\n      </div>\n\n      <div className='card__buttons '>\n        {firstStar && ( //прозрачная звезда\n          <Button\n            text={\n              <svg\n                className='card__svg'\n                version='1.1'\n                xmlns='http://www.w3.org/2000/svg'\n                width='32'\n                height='32'\n                viewBox='0 0 32 32'\n              >\n                <title>star</title>\n                <path\n                  d='M16 23l-9 6 4-10-9-6h10l4-10 4 10h10l-9 6 4 10z'\n                  fill='#0000'\n                  stroke='black'\n                ></path>\n              </svg>\n            }\n            bgc=''\n            onClick={() => {\n              starHandlerAdd(idMeal, data);\n              dispatch(dataRequest());\n            }}\n            btnClName='card__star'\n          />\n        )}\n\n        {secondStar && ( //зеленая звезда\n          <Button\n            text={\n              <svg\n                className='card__svg'\n                version='1.1'\n                xmlns='http://www.w3.org/2000/svg'\n                width='32'\n                height='32'\n                viewBox='0 0 32 32'\n              >\n                <title>star</title>\n                <path\n                  d='M16 23l-9 6 4-10-9-6h10l4-10 4 10h10l-9 6 4 10z'\n                  fill='darkgreen'\n                  stroke='black'\n                ></path>\n              </svg>\n            }\n            bgc=''\n            onClick={() => {\n              starHandlerRemove(idMeal, data); //зеленая звезда\n            }}\n            btnClName='card__star'\n          ></Button>\n        )}\n\n        {addButtonCart && (\n          <Button\n            text='Add to Cart'\n            bgc='darkgreen'\n            onClick={() => {\n              setSmodal(!secondModal); // добавление зеленого модального окна\n              dispatch(addConfirmModal());\n            }}\n            btnClName='button card__button'\n          />\n        )}\n\n        {delButtonCart && (\n          <Button\n            text='Delete from Cart'\n            bgc='red'\n            onClick={() => {\n              setFmodal(!firstModal); // добавление красного модального окна\n              dispatch(addRegectModal());\n            }}\n            btnClName='button card__button'\n          />\n        )}\n\n        {skipButton && (\n          <Button\n            text='SKIP'\n            bgc='red'\n            onClick={() => {\n              dispatch(dataRequest()); //вызов следующего блюда (skip)\n            }}\n            btnClName='button card__button'\n          />\n        )}\n      </div>\n\n      {firstModal && ( // красная модалка\n        <Modal\n          text='If you tap OK button, this item will be deleted from your Cart.  '\n          header='Do you want to delete this item to your Cart?'\n          modalBg='red'\n          headerBg='crimson'\n          actions={\n            <div className='modal__buttons'>\n              <Button\n                text='Ok'\n                bgc='crimson'\n                onClick={() => {\n                  ОкFirstModalHandler(idMeal, data); //обработка кнопка добавления удаления из корзины//\n                }}\n                btnClName='button modal__button'\n              />\n            </div>\n          }\n          closeButton={true}\n          closeModalHandler={ModalHandler} // закрытие модалки\n        />\n      )}\n\n      {secondModal && ( // зеленая модалка\n        <Modal\n          text='If you tap OK button, this item will be added to your Cart.  '\n          header='Do you want to add this item to your Cart?'\n          modalBg='green'\n          headerBg='darkgreen'\n          actions={\n            <div className='modal__buttons'>\n              <Button\n                text='Ok'\n                bgc='darkgreen'\n                onClick={() => {\n                  OkSecondModalHandler(idMeal, data); //обработка кнопки ОК зеленой модалки\n                }}\n                btnClName='button modal__button'\n              />\n            </div>\n          }\n          closeButton={true}\n          closeModalHandler={ModalHandler} //закрытие модалки\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Card;\n","import Card from '../Card';\nimport React from 'react';\n\nfunction Itemlist({ data = [] }) {\n  return (\n    <>\n      {data.map((data) => {\n        return (\n          <Card\n            data={data}\n            key={`${data.idMeal}`}\n            skipBut='true'\n            addEmptyrtStar='true'\n            bgcolor='rgb(162, 189, 162)'\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default Itemlist;\n","import React from 'react';\nimport Itemlist from '../Itemlist';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { dataRequest } from '../../redux/actions';\n\nfunction Itempage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(dataRequest());\n  }, [dispatch]);\n\n  const data = useSelector((store) => {\n    return store.data;\n  });\n\n  return <Itemlist data={data} />;\n}\n\nexport default Itempage;\n","function Headerlogo() {\n  return (\n    <div className='header-topmenu__logo'>\n      <div className='header-topmenu__logo__icon'></div>\n      <span className='header-topmenu__logo__text'>GoodFood</span>\n    </div>\n  );\n}\n\nexport default Headerlogo;\n","import { NavLink } from 'react-router-dom';\nconst Nav = ({\n  active = '',\n  setActive = () => {},\n  openBurger = '',\n  setopenBurger = () => {},\n  lineActive = '',\n  setLineActive = () => {},\n}) => {\n  const burgerHandler = () => {\n    if (active) {\n      setActive(false);\n      setopenBurger(!openBurger);\n      setLineActive(!lineActive);\n    }\n\n    return;\n  };\n\n  return (\n    <nav className='header-topmenu__nav'>\n      <ul\n        className={\n          active\n            ? 'header-topmenu__list header-topmenu__list-active'\n            : 'header-topmenu__list'\n        }\n      >\n        <li className='header-topmenu__item'>\n          <NavLink\n            exact\n            to='/'\n            className='header-topmenu__link '\n            activeClassName='header-topmenu__link__active'\n            onClick={() => burgerHandler()}\n          >\n            Random dish\n          </NavLink>\n        </li>\n        <li className='header-topmenu__item'>\n          <NavLink\n            exact\n            to='/favorite'\n            className='header-topmenu__link'\n            activeClassName='header-topmenu__link__active'\n            onClick={() => burgerHandler()}\n          >\n            Favorite\n          </NavLink>\n        </li>\n        <li className='header-topmenu__item'>\n          <NavLink\n            exact\n            to='/cart'\n            className='header-topmenu__link'\n            activeClassName='header-topmenu__link__active'\n            onClick={() => burgerHandler()}\n          >\n            Cart\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","function Headerburger({\n  active = '',\n  setActive = () => {},\n  openBurger = '',\n  setopenBurger = () => {},\n  lineActive = '',\n  setLineActive = () => {},\n}) {\n  const burgerHandler = () => {\n    setActive(!active);\n    setopenBurger(!openBurger);\n    setLineActive(!lineActive);\n  };\n\n  const burger = document.querySelector('.header-topmenu__burger');\n  const topMenu = document.querySelector('.header-topmenu__list');\n  const bl = document.querySelector('.header-topmenu__burger__line');\n\n  const outsideEvtListener = (e) => {\n    if (\n      !active ||\n      e.target === topMenu ||\n      e.target === burger ||\n      e.target === bl\n    ) {\n      return;\n    }\n    burgerHandler();\n  };\n\n  document.addEventListener('click', outsideEvtListener);\n\n  return (\n    <div className='header-topmenu__burger__wrapper'>\n      <div\n        className={\n          openBurger\n            ? 'header-topmenu__burger'\n            : 'header-topmenu__burger header-topmenu__burger-active'\n        }\n        onClick={() => burgerHandler()}\n      >\n        <span\n          className={\n            !lineActive\n              ? 'header-topmenu__burger__line'\n              : 'header-topmenu__burger__line header-topmenu__burger__line-hide'\n          }\n        ></span>\n      </div>\n    </div>\n  );\n}\n\nexport default Headerburger;\n","import '../Header/style.scss';\nimport Headerlogo from '../Headerlogo';\nimport Headernav from '../Headernav';\nimport Headerburger from '../Headerburger';\nimport { useState } from 'react';\n\nfunction Header() {\n  const [menuActive, setmenuActive] = useState(false);\n\n  const [openBurger, setopenBurger] = useState(true); // открытие бургера\n  const [lineActive, setLineActive] = useState(false); //линии бургера\n\n  return (\n    <header className='header'>\n      <div className='container container__header'>\n        <div className='header-topmenu'>\n          <Headerlogo />\n          <Headerburger\n            active={menuActive}\n            setActive={setmenuActive}\n            openBurger={openBurger}\n            setopenBurger={setopenBurger}\n            lineActive={lineActive}\n            setLineActive={setLineActive}\n          />\n          <Headernav\n            active={menuActive}\n            setActive={setmenuActive}\n            openBurger={openBurger}\n            setopenBurger={setopenBurger}\n            lineActive={lineActive}\n            setLineActive={setLineActive}\n          />\n        </div>\n      </div>\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react';\nimport Card from '../Card';\n\nfunction Favorites({ data = [], addFullStar = '', addEmptyrtStar = '' }) {\n  if (data === null || data.length === 0) {\n    return <h1>No items to displey, please make your choice</h1>;\n  }\n  return data.map((data) => {\n    return (\n      <Card\n        data={data}\n        addButCart={true}\n        delButCart={false}\n        addFullStar={addFullStar}\n        bgcolor='aliceblue'\n        key={`${data.idMeal}`}\n        addEmptyrtStar={addEmptyrtStar}\n      />\n    );\n  });\n}\n\nexport default Favorites;\n","import React from 'react';\nimport Card from '../Card';\n\nfunction Cart({ data = [] }) {\n  const full = (data) => {\n    return data.map((data) => {\n      return <Card data={data} delButCart={true} key={`${data.idMeal}`} />;\n    });\n  };\n  const empty = () => {\n    return <h1>No items to displey, please make your choice</h1>;\n  };\n\n  return (\n    ((data === null || data.length === 0) && empty()) || (data && full(data))\n  );\n}\n\nexport default Cart;\n","import '../Form/style.scss';\nimport React from 'react';\nimport Button from '../Button';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addDataFavorite } from '../../redux/actions';\n\nfunction Form({ closeModalHandler = () => {} }) {\n  const dispatch = useDispatch();\n\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  const favoriteHandler = (id, data) => {\n    let favorite = JSON.parse(localStorage.getItem('favorite') || '[]'); //получение данных массива favorite из Local storage (LS)\n    if (!favorite.some((el) => el.idMeal === id)) {\n      const newFavorit = [...favorite, data];\n      //запись данных массива favorite в LS и Стору\n      localStorage.setItem('favorite', JSON.stringify(newFavorit));\n      dispatch(addDataFavorite(newFavorit));\n    }\n  };\n  //генерация ID\n  function genID(num) {\n    return num + '' + Math.floor(Math.random() * 1000);\n  }\n  //генерация объекта данных внисимых пользователем\n  function addItem(e) {\n    e.preventDefault();\n    let obj = {\n      idMeal: genID(25),\n      strMeal: value1,\n      strInstructions: value2,\n    };\n    favoriteHandler(obj.idMeal, obj);\n    closeModalHandler(); //закрытие модалки\n  }\n\n  return (\n    <div className='form-wrapper'>\n      <form className='form' onSubmit={addItem}>\n        <div className='form__box'>\n          <input\n            value={value1}\n            className='form__box__input'\n            type='text'\n            placeholder='Dish title'\n            onChange={(event) => setValue1(event.target.value)} //считывание названия блюда\n            required\n          />\n        </div>\n\n        <div className='form__box'>\n          <textarea\n            value={value2}\n            className='form__box__input'\n            type='text'\n            placeholder='Dish description...'\n            onChange={(event) => setValue2(event.target.value)} //считывание инструкции блюда\n            required\n          ></textarea>\n        </div>\n        <div className='form__box'>\n          <Button\n            text='Add custom dish'\n            type='submit'\n            bgc='#8d81ac'\n            btnClName='form__box__btn button'\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport Itempage from '../Itempage';\nimport Header from '../Header';\nimport Favorites from '../Favorites';\nimport Cart from '../Cart';\nimport Modal from '../Modal';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Button from '../Button';\nimport Form from '../Form';\n\nfunction App() {\n  const favorite = useSelector((store) => {\n    return store.favorite; //получение данных массива favorite из store\n  });\n\n  const cart = useSelector((store) => {\n    return store.cart; //получение данных массива cart из store\n  });\n\n  const [thirdModal, setFmodal] = useState(false);\n\n  const addModalHandler = () => {\n    setFmodal(true);\n  };\n\n  const closeModal = () => {\n    setFmodal(false);\n  };\n\n  return (\n    <Router>\n      <div className='App'>\n        <div className='main__container'>\n          <Header />\n          <div className='cards'>\n            <Switch>\n              <Route exact path='/'>\n                <Itempage />\n              </Route>\n\n              <Route exact path='/favorite'>\n                <Favorites\n                  data={favorite}\n                  addFullStar={true}\n                  addEmptyrtStar={false}\n                />\n                <div className='favorite__button'>\n                  <Button\n                    text='Add custom dish'\n                    bgc='#8d81ac'\n                    onClick={() => {\n                      addModalHandler(); //обработка кнопки в Header\n                    }}\n                    btnClName='button'\n                  />\n                </div>\n                <div className='favorite__modal'>\n                  {thirdModal && (\n                    <Modal\n                      text=''\n                      header='Add custom dish'\n                      modalBg='green'\n                      headerBg='darkgreen'\n                      actions={<Form closeModalHandler={closeModal} />}\n                      closeButton={true}\n                      closeModalHandler={closeModal} //закрытие модалки\n                    />\n                  )}\n                </div>\n              </Route>\n              <Route exact path='/cart'>\n                <Cart data={cart} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport {\n  DATA_REQUEST_STARTED,\n  DATA_REQUEST_SUCCESS,\n  DATA_REQUEST_FAILURE,\n  ADD_FAVORITE_STARTED,\n  ADD_FAVORITE_SUCCESS,\n  ADD_FAVORITE_FAILURE,\n  REMOVE_FAVORITE_STARTED,\n  REMOVE_FAVORITE_SUCCESS,\n  REMOVE_FAVORITE_FAILURE,\n  ADD_CART_STARTED,\n  ADD_CART_SUCCESS,\n  ADD_CART_FAILURE,\n  REMOVE_CART_STARTED,\n  REMOVE_CART_SUCCESS,\n  REMOVE_CART_FAILURE,\n  ADD_CONFIRM_MODAL,\n  REMOVE_CONFIRM_MODAL,\n  ADD_REGECT_MODAL,\n  REMOVE_REGECT_MODAL,\n} from '../types';\n\nconst initialStore = {\n  data: [],\n  favorite: JSON.parse(localStorage.getItem('favorite')), //получение данных массива favorite из Local storage\n  cart: JSON.parse(localStorage.getItem('cart')), //получение данных массива Cart из Local storage\n  confirmModal: false,\n  regectModal: false,\n};\n\nfunction rootReducer(store = initialStore, action) {\n  switch (action.type) {\n    case DATA_REQUEST_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case DATA_REQUEST_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        data: action.payload,\n      };\n    case DATA_REQUEST_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n    // ======== добавление в избранное\n    case ADD_FAVORITE_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case ADD_FAVORITE_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        favorite: action.payload,\n      };\n    case ADD_FAVORITE_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n\n    // =========== удаление из избранного\n    case REMOVE_FAVORITE_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case REMOVE_FAVORITE_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        favorite: action.payload,\n      };\n    case REMOVE_FAVORITE_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n\n    // ======== добавление в корзину\n    case ADD_CART_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case ADD_CART_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        cart: action.payload,\n      };\n    case ADD_CART_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n\n    //================удаление из корзины\n    case REMOVE_CART_STARTED:\n      return {\n        ...store,\n        loading: true,\n      };\n    case REMOVE_CART_SUCCESS:\n      return {\n        ...store,\n        loading: false,\n        cart: action.payload,\n      };\n    case REMOVE_CART_FAILURE:\n      return {\n        ...store,\n        loading: false,\n        error: action.payload,\n      };\n\n    //добавление и удаление модалки confirm\n    case ADD_CONFIRM_MODAL:\n      return {\n        ...store,\n        confirmModal: true,\n      };\n\n    case REMOVE_CONFIRM_MODAL:\n      return {\n        ...store,\n        confirmModal: false,\n      };\n\n    //==============\n\n    //добавление и удаление модалки confirm\n    case ADD_REGECT_MODAL:\n      return {\n        ...store,\n        regectModal: true,\n      };\n\n    case REMOVE_REGECT_MODAL:\n      return {\n        ...store,\n        regectModal: false,\n      };\n\n    //==============\n\n    default:\n      return store;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}